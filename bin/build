#! node

const esbuild = require('esbuild')

function report(error, { warnings }) {
  if (error) {
    console.error('Build error', error)
  } else if (warnings.length > 0) {
    console.warn('Build succeeded with errors', result)
  } else {
    console.log('Build succeeded')
  }
}

const watch = process.argv.includes('--watch')

const builds = [
  esbuild.build({
    entryPoints: ['src/index.ts'],
    bundle: true,
    outfile: 'dist/main.js',
    platform: 'node',
    watch: watch ? { onRebuild: report } : false
  }),
  esbuild.build({
    entryPoints: ['src/cli.ts'],
    bundle: true,
    outfile: 'dist/cli.js',
    platform: 'node',
    watch: watch ? { onRebuild: report } : false
  }),
]

Promise.all(builds).then(results => {
  if (watch) {
    console.log('Watching for changes')
  } else {
    for (const result of results) {
      report(null, result)
    }
  }
}).catch(error => {
  console.error(error)
  process.exit(1)
})